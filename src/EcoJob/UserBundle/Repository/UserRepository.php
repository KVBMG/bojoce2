<?php

namespace EcoJob\UserBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository {

    public function getAllUser() {
        $qb = $this->createQueryBuilder('u');
        $qb->where('u.username != :identifier')
                ->setParameter('identifier', "Administrateur");

        return $qb->getQuery()
                  ->getResult();
    }

    public function getNewlyCandidat() {
        $dateNow = new \DateTime();
        $dateMax = $dateNow->modify('+1 day');
        $dateNow = new \DateTime();
        $dateMin = $dateNow->modify('-7 day');
        $qb = $this->createQueryBuilder('u');
        $qb->where("u.type = 1 ");
        $qb->andWhere('u.createdAt BETWEEN :dateMin AND :dateMax')
                ->setParameter('dateMin', $dateMin)
                ->setParameter('dateMax', $dateMax);

        return $qb->getQuery()->getResult();
    }

    public function getNewlyRecruteur() {
        $dateNow = new \DateTime();
        $dateMax = $dateNow->modify('+1 day');
        $dateNow = new \DateTime();
        $dateMin = $dateNow->modify('-7 day');
        $qb = $this->createQueryBuilder('u');
        $qb->where("u.type = 2 ");
        $qb->andWhere('u.createdAt BETWEEN :dateMin AND :dateMax')
                ->setParameter('dateMin', $dateMin)
                ->setParameter('dateMax', $dateMax);

        return $qb->getQuery()->getResult();
    }

    public function getByCategorieOffres($id_categorie) {
        $query = $this->_em->createQuery('SELECT u FROM EcoJobUserBundle:User u JOIN EcoJobCandidatBundle:ParamCandidat p WHERE u.id = p.candidat AND p.categorie = :categorie');
        $query->setParameter('categorie', $id_categorie);
        $resultats = $query->getResult();
        return $resultats;
    }

}

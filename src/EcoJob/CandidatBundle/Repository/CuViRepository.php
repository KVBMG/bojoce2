<?php

namespace EcoJob\CandidatBundle\Repository;

/**
 * CuViRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CuViRepository extends \Doctrine\ORM\EntityRepository {

    public function search($keywords, $experience, $nivFormation, $secteur,$offset, $limit) {

        $qb = $this->createQueryBuilder('c')
                ->where('c.showable =  true')
                ->setFirstResult($offset)
                ->setMaxResults($limit);
        if($nivFormation != NULL){
                $qb->join('c.formations','f', 'WITH', 'f.niveau = :niveau')
                ->andWhere('f.niveau = :niveau')        
                ->setParameter('niveau', $nivFormation);
        }
        if($secteur != NULL){
                $qb->join('c.experiences','e', 'WITH', 'e.secteurActivite = :secteur')
                ->andWhere('e.secteurActivite = :secteur')        
                ->setParameter('secteur', $secteur);
        }
        if (!empty($keyswords)) {
            $tab = explode(" ", $keyswords);
            if (count($tab) > 1) {
                for ($i = 0; $i < count($tab); $i++) {
                    if (!empty($tab[$i])) {
                        $tab[$i] = strtolower($tab[$i]);
                        $qb->andWhere("REGEXP(LOWER(c.about), :regexp$i) = true OR REGEXP(LOWER(c.poste), :regexp$i) = true")
                                ->setParameter("regexp$i", "% $tab[$i] %");
                    }
                }
            } else {
                $keyswords = strtolower($keyswords);
                $qb->andWhere("REGEXP(LOWER(c.about), :query) = true OR REGEXP(LOWER(c.poste), :query) = true")
                        ->setParameter("query", "$keyswords");
            }
        }
        if ($experience != NULL) {
            $qb->leftJoin('c.etatCivil','ex')
                ->where('ex.anneeExp = :exp')
                ->setParameter('exp', $experience);                    
        }
        return $qb->getQuery()->getResult();
    }

}

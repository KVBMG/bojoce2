<?php

namespace EcoJob\CandidatBundle\Repository;

/**
 * CuViRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CuViRepository extends \Doctrine\ORM\EntityRepository {

    public function search($keywords, $experience, $localisation, $secteur, $offset, $limit) {

        $qb = $this->createQueryBuilder('c')
                ->where('c.showable =  true')
                ->orderBy('c.updatedAt', 'DESC')
                ->setFirstResult($offset)
                ->setMaxResults($limit);
        if($secteur != NULL){
                $qb->leftJoin('c.secteur','s')
                ->where('s.id = :sect')
                ->setParameter('sect', $secteur);            
        }
        if (!empty($localisation)) {
            $qb->andWhere('c.localisation LIKE :loc')
                    ->setParameter('loc', "%localisation%");
        }

        if (!empty($keyswords)) {
            $tab = explode(" ", $keyswords);
            if (count($tab) > 1) {
                for ($i = 0; $i < count($tab); $i++) {
                    if (!empty($tab[$i])) {
                        $tab[$i] = strtolower($tab[$i]);
                        $qb->andWhere("REGEXP(LOWER(c.about), :regexp$i) = true OR REGEXP(LOWER(c.poste), :regexp$i) = true")
                                ->setParameter("regexp$i", "% $tab[$i] %");
                    }
                }
            } else {
                $keyswords = strtolower($keyswords);
                $qb->andWhere("REGEXP(LOWER(c.about), :query) = true OR REGEXP(LOWER(c.poste), :query) = true")
                        ->setParameter("query", "$keyswords");
            }
        }
        if ($experience != 0) {
            $qb->andWhere('c.experience = :exp')
                    ->setParameter('exp', $experience);
        }
        return $qb->getQuery()->getResult();
    }

}
